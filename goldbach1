import math as ma
import datetime 

Now = datetime.datetime.now()

def is_prime(n):
    if n ==2:
        return True
    if n ==3:
        return True
    elif n>3 and isinstance(n,int):
        i = 1
        while i*i<=(n+1):
            i+=1
            if (n % i) ==0:
                return False

        return True 
    else:
        return False

def prime_list(n): # primes till n
    primes = []
    for j in range(n):
        if is_prime(j):
            primes.append(j)

    return primes

# def partition(n):
    #n = int(input(""))
    # inputs.append(n)
inputs=[]
for _ in range(int(input(""))):
    n = int(input(""))
    inputs.append(n)
    
# for element in range(len(inputs)):
for element in range(len(inputs)):
    Input = inputs[element]
    if (Input % 2 == 0) and isinstance(Input,int) and (4<= Input <= 10000):    
        tmp1 = prime_list(inputs[element])
        tmp2 = [] # 골드바흐 partion 받아주는 list 

        for j in range(len(tmp1)):
            a = tmp1[j]
            for i in range(len(tmp1)):
                b = tmp1[i]
                if a + b == Input:
                    tmp2.append([a,b])
                    if  len(tmp2)>2 and abs(tmp2[-1][0]-tmp2[-1][1])>abs(tmp2[-2][0]-tmp2[-2][1]):
                        del tmp2[-1]
                        break
                    
        mini_pair = tmp2[-1]
        # middle_pair = tmp2[int(len(tmp2)/2)]
        # print(middle_pair)
        print( min(mini_pair),max(mini_pair))
        
        #print(tmp2)
        
        # print(tmp2[Mini][0], tmp2[Mini][1])

    else:
        print(" ")

print("%s" % (datetime.datetime.now()-Now))
